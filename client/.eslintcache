[{"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\index.js":"1","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\App.jsx":"2","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\routes\\RestaurantDetailPage.jsx":"3","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\routes\\UpdatePage.jsx":"4","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\routes\\Home.jsx":"5","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\Header.jsx":"6","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\AddRestaurant.jsx":"7","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\RestaurantList.jsx":"8","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\context\\RestaurantsContext.js":"9","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\apis\\RestaurantFinder.js":"10","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\UpdateRestaurant.jsx":"11","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\StarRating.jsx":"12","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\Reviews.jsx":"13","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\AddReview.jsx":"14","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\index.js":"15","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\App.jsx":"16","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\UpdatePage.jsx":"17","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\Home.jsx":"18","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\Header.jsx":"19","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddReview.jsx":"20","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\StarRating.jsx":"21","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\Reviews.jsx":"22","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\context\\HotelsContext.js":"23","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\UpdateHotel.jsx":"24","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddHotel.jsx":"25","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\apis\\HotelFinder.js":"26","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\HotelList.jsx":"27","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\HotelDetailPage.jsx":"28","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddCity.jsx":"29","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\CitiesList.jsx":"30","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddCountry.jsx":"31","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\CountryList.jsx":"32","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\HotelOptions.jsx":"33","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddOption.jsx":"34","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\ReservationPage.jsx":"35","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\NewUserReservation.jsx":"36","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\ExistingUserReservation.jsx":"37","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\ClientsReservations.jsx":"38","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\CheckReservations.jsx":"39"},{"size":146,"mtime":1609060143343,"results":"40","hashOfConfig":"41"},{"size":908,"mtime":1609191264428,"results":"42","hashOfConfig":"41"},{"size":1750,"mtime":1609608640323,"results":"43","hashOfConfig":"41"},{"size":301,"mtime":1609541218355,"results":"44","hashOfConfig":"41"},{"size":372,"mtime":1609190550579,"results":"45","hashOfConfig":"41"},{"size":226,"mtime":1609185684899,"results":"46","hashOfConfig":"41"},{"size":2283,"mtime":1609535538728,"results":"47","hashOfConfig":"41"},{"size":3772,"mtime":1609608771578,"results":"48","hashOfConfig":"41"},{"size":633,"mtime":1609544695632,"results":"49","hashOfConfig":"41"},{"size":121,"mtime":1609192847676,"results":"50","hashOfConfig":"41"},{"size":2151,"mtime":1609543029106,"results":"51","hashOfConfig":"41"},{"size":619,"mtime":1609603611626,"results":"52","hashOfConfig":"41"},{"size":2794,"mtime":1609603563675,"results":"53","hashOfConfig":"41"},{"size":2448,"mtime":1609606289677,"results":"54","hashOfConfig":"41"},{"size":146,"mtime":1610623764262,"results":"55","hashOfConfig":"56"},{"size":1367,"mtime":1610926528773,"results":"57","hashOfConfig":"56"},{"size":289,"mtime":1610791117014,"results":"58","hashOfConfig":"56"},{"size":652,"mtime":1610717019374,"results":"59","hashOfConfig":"56"},{"size":1043,"mtime":1612448573408,"results":"60","hashOfConfig":"56"},{"size":2584,"mtime":1612444465002,"results":"61","hashOfConfig":"56"},{"size":619,"mtime":1609603611626,"results":"62","hashOfConfig":"56"},{"size":938,"mtime":1610821312548,"results":"63","hashOfConfig":"56"},{"size":1221,"mtime":1612382649810,"results":"64","hashOfConfig":"56"},{"size":2510,"mtime":1612379273710,"results":"65","hashOfConfig":"56"},{"size":2582,"mtime":1612441605926,"results":"66","hashOfConfig":"56"},{"size":166,"mtime":1612456158371,"results":"67","hashOfConfig":"56"},{"size":3298,"mtime":1612375219191,"results":"68","hashOfConfig":"56"},{"size":2148,"mtime":1610918334013,"results":"69","hashOfConfig":"56"},{"size":1717,"mtime":1612372392079,"results":"70","hashOfConfig":"56"},{"size":2192,"mtime":1612448244894,"results":"71","hashOfConfig":"56"},{"size":1215,"mtime":1610805492114,"results":"72","hashOfConfig":"56"},{"size":2127,"mtime":1612448221414,"results":"73","hashOfConfig":"56"},{"size":1399,"mtime":1612444560603,"results":"74","hashOfConfig":"56"},{"size":1395,"mtime":1612444528182,"results":"75","hashOfConfig":"56"},{"size":3059,"mtime":1610925859708,"results":"76","hashOfConfig":"56"},{"size":3775,"mtime":1612467540294,"results":"77","hashOfConfig":"56"},{"size":3273,"mtime":1612467558116,"results":"78","hashOfConfig":"56"},{"size":5059,"mtime":1612445872931,"results":"79","hashOfConfig":"56"},{"size":2008,"mtime":1612357879124,"results":"80","hashOfConfig":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1opp4h",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"m6ldu2",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"112"},"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\index.js",[],["174","175"],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\App.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\routes\\RestaurantDetailPage.jsx",["176"],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\routes\\UpdatePage.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\routes\\Home.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\Header.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\AddRestaurant.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\RestaurantList.jsx",["177","178"],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\context\\RestaurantsContext.js",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\apis\\RestaurantFinder.js",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\UpdateRestaurant.jsx",["179","180"],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\StarRating.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\Reviews.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\yelp\\client\\src\\components\\AddReview.jsx",["181"],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\index.js",[],["182","183"],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\App.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\UpdatePage.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\Home.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\Header.jsx",["184"],"import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport logo from '../images/hotel_image.png';\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    const  handleChoose = async (e, id) => {\r\n        e.stopPropagation();\r\n        history.push(\"/checkReservations\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"font-weight-bold display-1 text-center\">Baza Hoteli</h1>\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', paddingBottom : '30px'}}>\r\n                <img src={logo}/>\r\n            </div>\r\n            <h5 className=\"text-center font-italic\">Sprawdzenie rezerwacji dla zarejestrowanych użytkowników</h5>\r\n            <div className=\"text-center\" style={{display: 'flex',  justifyContent:'center', alignItems:'center', paddingBottom : '30px'}}>\r\n                <button onClick={(e) => handleChoose(e,)} className=\"btn btn-success\">Sprawdź rezerwacje</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddReview.jsx",["185"],"import React, { useState } from 'react'\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport HotelFinder from '../apis/HotelFinder';\r\n\r\nconst AddReview = () => {\r\n    const {id} = useParams();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [name, setName] = useState(\"Anonim\");\r\n    const [reviewText, setReviewText] = useState(\"\");\r\n    const [rating, setRating] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await HotelFinder.post(`/${id}/addReview`, {\r\n                name,\r\n                review : reviewText,\r\n                rating,\r\n            });\r\n            history.push(\"/\");\r\n            history.push(location.pathname);\r\n        } catch (e) {\r\n            console.log(e);\r\n            alert(e.response.data.data.err);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-2\">\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-8\">\r\n                        <label htmlFor=\"name\">Imie</label>\r\n                        <input value={name} onChange={e => setName(e.target.value)} id=\"name\" placeholder=\"name\" type=\"text\" className=\"form-control\" required/>\r\n                    </div>\r\n                    <div className=\"form-group col-8\">\r\n                        <label htmlFor=\"rating\">Ocena</label>\r\n                        <select value={rating} onChange={e => setRating(e.target.value)} id=\"rating\" className=\"custom-select\" required> \r\n                            <option value=\"\" defaultValue disabled>Ocena</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"Review\">Recenzja</label>\r\n                    <textarea value={reviewText} onChange={e => setReviewText(e.target.value)} id=\"Review\" className=\"form-control\" placeholder=\"Tutaj napisz recenzję\" required></textarea>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Zatwierdź</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddReview\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\StarRating.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\Reviews.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\context\\HotelsContext.js",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\UpdateHotel.jsx",["186","187","188","189"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport HotelFinder from '../apis/HotelFinder';\r\n\r\nconst UpdateHotel = () => {\r\n    const {id} = useParams();\r\n    let history = useHistory();\r\n    const [name, setName] = useState(\"\");\r\n    const [priceRange, setPriceRange] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const response = await HotelFinder.get(`/${id}`);\r\n            setName(response.data.data.hotel.nazwa);\r\n            setPriceRange(response.data.data.hotel.cena);\r\n            if (!response.data.data.hotel.opis) {\r\n                const updatedDescription = await HotelFinder.post(`/${id}/description`, {\r\n                    description : \"brak opisu\"\r\n                });\r\n            }\r\n            setDescription(response.data.data.hotel.opis ? response.data.data.hotel.opis : \"brak opisu\");\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const updatedHotel = await HotelFinder.put(`/${id}`, {\r\n            name,\r\n            price_range: priceRange\r\n        });\r\n        const updatedHotel2 = await HotelFinder.put(`/${id}/description`, {\r\n            description\r\n        });\r\n        history.push(\"/\");\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        <div>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Nawa</label>\r\n                    <input value={name} onChange ={e => setName(e.target.value)} id=\"name\" type=\"text\" className=\"form-control\" required/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"price_range\">Zakres cenowy</label>\r\n                    <input value={priceRange} onChange={e => setPriceRange(e.target.value)} id=\"price_range\" type=\"number\" className=\"form-control\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Opis hotelu</label>\r\n                    <textarea value={description} onChange={e => setDescription(e.target.value)} id=\"description\" type=\"text\" className=\"form-control\"/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Zatwierdź zmiany</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateHotel\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddHotel.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\apis\\HotelFinder.js",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\HotelList.jsx",["190","191"],"import React, {useContext, useEffect} from 'react';\r\nimport HotelFinder from \"../apis/HotelFinder\";\r\nimport { HotelsContext } from '../context/HotelsContext';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport StarRating from './StarRating';\r\n\r\n\r\nconst HotelList = (props) => {\r\n    const {hotels, setHotels} = useContext(HotelsContext);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await HotelFinder.get(\"/\");\r\n                setHotels(response.data.data.hotels);\r\n            } catch (err) {}\r\n        }\r\n        \r\n        fetchData();\r\n    }, [])\r\n\r\n    const  handleDelete = async (e, id) => {\r\n        e.stopPropagation();\r\n        try {\r\n            const response = await HotelFinder.delete(`/${id}`);\r\n            setHotels(hotels.filter(hotel => {\r\n                return hotel.id_hotelu !== id;\r\n            }));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const  handleUpdate = (e, id) => {\r\n        e.stopPropagation();\r\n        history.push(`/hotels/${id}/update`);\r\n    };\r\n\r\n    const handleHotelSelect = (id) => {\r\n        history.push(`/hotels/${id}`);\r\n    }\r\n\r\n    const renderRating = (hotel) => {\r\n        if (!hotel.count) {\r\n            return <span className=\"text-warning\">0 opinii</span>\r\n        }\r\n        return (\r\n            <>\r\n                <StarRating rating={hotel.srednia_ocena}/>\r\n                <span className=\"text-warning ml-1\">({hotel.count})</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group\">\r\n            <h2>Aby poznać szczegóły kliknij na wybrany hotel</h2>\r\n            <table className=\"table table-light table-striped table-hover\">\r\n                <thead>\r\n                    <tr className=\"bg-info\">\r\n                        <th scope=\"col\">Hotel</th>\r\n                        <th scope=\"col\">Miasto</th>\r\n                        <th scope=\"col\">Zakres cenowy</th>\r\n                        <th scope=\"col\">Ocena</th>\r\n                        <th scope=\"col\">Edytuj</th>\r\n                        <th scope=\"col\">Usuń</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {hotels && hotels.map((hotel) => {\r\n                        return (\r\n                            <tr onClick={() => handleHotelSelect(hotel.id_hotelu)} key={hotel.id_hotelu}>\r\n                            <td>{hotel.nazwa}</td>\r\n                            <td>{hotel.nazwa_miasta}</td>\r\n                            <td>{\"$\".repeat(hotel.cena)}</td>\r\n                            <td>{renderRating(hotel)}</td>\r\n                            <td>\r\n                                <button onClick={(e) => handleUpdate(e, hotel.id_hotelu)} className=\"btn btn-warning\">Edycja</button>\r\n                            </td>\r\n                            <td>\r\n                                <button onClick={(e) => handleDelete(e, hotel.id_hotelu)} className=\"btn btn-danger\">Usuń</button>\r\n                            </td>\r\n                  \r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HotelList\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\HotelDetailPage.jsx",["192"],"import React, { useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport HotelFinder from '../apis/HotelFinder';\r\nimport AddOption from '../components/AddOption';\r\nimport AddReview from '../components/AddReview';\r\nimport HotelOptions from '../components/HotelOptions';\r\nimport Reviews from '../components/Reviews';\r\nimport StarRating from '../components/StarRating';\r\nimport { HotelsContext } from '../context/HotelsContext';\r\n\r\nconst HotelDetailPage = (props) => {\r\n    const {id} = useParams();\r\n    const {selectedHotel, setSelectedHotel} = useContext(HotelsContext);\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await HotelFinder.get(`/${id}`);\r\n                setSelectedHotel(response.data.data);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {selectedHotel && (\r\n                <>\r\n                    <h1 className=\"text-center display-1\">{selectedHotel.hotel.nazwa}</h1>\r\n                    <div className=\"text-center\">\r\n                        <StarRating rating={selectedHotel.hotel.srednia_ocena}></StarRating>\r\n                        <span className=\"text-warning ml-1\">\r\n                            {selectedHotel.hotel.count ? `(${selectedHotel.hotel.count})` : \"(0)\"}\r\n                        </span>\r\n                        <p className=\"font-italic\">{selectedHotel.hotel.opis}</p>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Reviews reviews={selectedHotel.reviews}/>\r\n                    </div>\r\n                    <div>\r\n                        <AddReview/>\r\n                    </div>\r\n                    <div style={{paddingTop: \"50px\"}}>\r\n                        <HotelOptions options={selectedHotel.options}/>\r\n                    </div>\r\n                    <div>\r\n                        <AddOption/>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HotelDetailPage\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddCity.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\CitiesList.jsx",["193","194","195"],"import React, {useContext, useEffect} from 'react';\r\nimport HotelFinder from \"../apis/HotelFinder\";\r\nimport { HotelsContext } from '../context/HotelsContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CitiesList = (props) => {\r\n    const {cities, setCities} = useContext(HotelsContext);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await HotelFinder.get(\"/cities\");\r\n                setCities(response.data.data.cities);\r\n            } catch (err) {}\r\n        }\r\n        \r\n        fetchData();\r\n    }, [])\r\n\r\n    const  handleDelete = async (e, id) => {\r\n        e.stopPropagation();\r\n        try {\r\n            const response = await HotelFinder.delete(`/cities/${id}`);\r\n            setCities(cities.filter(city => {\r\n                return city.id_miasta !== id;\r\n            }));\r\n        } catch (err) {\r\n            console.log(err);\r\n            if (err.response.data !== undefined) {\r\n                alert(err.response.data.data.err);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"list-group\">\r\n            <table className=\"table table-light table-striped\">\r\n                <thead>\r\n                    <tr className=\"bg-info\">\r\n                        <th scope=\"col\">Miasto</th>\r\n                        <th scope=\"col\">Kraj</th>\r\n                        <th scope=\"col\">Usuń</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {cities && cities.map((city) => {\r\n                        return (\r\n                            <tr  key={city.id_miasta}>\r\n                            <td>{city.nazwa}</td>\r\n                            <td>{city.nazwa_kraju}</td>\r\n                            <td>\r\n                                <button onClick={(e) => handleDelete(e, city.id_miasta)} className=\"btn btn-danger\">Usuń</button>\r\n                            </td>\r\n                  \r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CitiesList\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddCountry.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\CountryList.jsx",["196","197","198","199"],"import React, {useContext, useEffect} from 'react';\r\nimport HotelFinder from \"../apis/HotelFinder\";\r\nimport { HotelsContext } from '../context/HotelsContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CountriesList = (props) => {\r\n    const {countries, setCountries} = useContext(HotelsContext);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await HotelFinder.get(\"/countries\");\r\n                setCountries(response.data.data.countries);\r\n            } catch (err) {}\r\n        }\r\n        \r\n        fetchData();\r\n    }, [])\r\n\r\n    const  handleDelete = async (e, id) => {\r\n        e.stopPropagation();\r\n        try {\r\n            const response = await HotelFinder.delete(`/countries/${id}`);\r\n            setCountries(countries.filter(country => {\r\n                return country.id_kraju !== id;\r\n            }));\r\n        } catch (err) {\r\n            console.log(err);\r\n            if (err.response != undefined) {\r\n                alert(err.response.data.data.err);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"list-group\">\r\n            <table className=\"table table-light table-striped\">\r\n                <thead>\r\n                    <tr className=\"bg-info\">\r\n                        <th scope=\"col\">Kraj</th>\r\n                        <th scope=\"col\">Usuń</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {countries && countries.map((country) => {\r\n                        return (\r\n                            <tr  key={country.id_kraju}>\r\n                            <td>{country.nazwa}</td>\r\n                            <td>\r\n                                <button onClick={(e) => handleDelete(e, country.id_kraju)} className=\"btn btn-danger\">Usuń</button>\r\n                            </td>\r\n                  \r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountriesList\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\HotelOptions.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\AddOption.jsx",["200"],"import React, { useState } from 'react'\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport HotelFinder from '../apis/HotelFinder';\r\n\r\nconst AddOption = () => {\r\n    const {id} = useParams();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [option, setOption] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await HotelFinder.post(`/${id}/addOption`, {\r\n                option\r\n            });\r\n            history.push(\"/\");\r\n            history.push(location.pathname);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-2\">\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-8\">\r\n                        <label htmlFor=\"option\">Opis nowej opcji</label>\r\n                        <input value={option} onChange={e => setOption(e.target.value)} minLength=\"5\" id=\"option\" placeholder=\"nowa opcja\" type=\"text\" className=\"form-control\" required/>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Dodaj opcję</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddOption","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\ReservationPage.jsx",["201"],"import React, { useContext, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport HotelFinder from '../apis/HotelFinder';\r\nimport ExistingUserReservation from '../components/ExistingUserReservation';\r\nimport NewUserReservation from '../components/NewUserReservation';\r\nimport { HotelsContext } from '../context/HotelsContext';\r\n\r\nconst ReservationPage = () => {\r\n    const {idHotel, idOption} = useParams();\r\n    const {selectedOption, setSelectedOption} = useContext(HotelsContext);\r\n    const {selectedHotel, setSelectedHotel} = useContext(HotelsContext);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const hotel = await HotelFinder.get(`/${idHotel}`);\r\n                setSelectedHotel(hotel.data.data);\r\n                const option = await HotelFinder.get(`/options/${idOption}`);\r\n                setSelectedOption(option.data.data);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {selectedHotel && selectedOption &&(\r\n                <>\r\n                    <h1 className=\"text-center display-2\" style={{paddingBottom:\"30px\"}}>Dane rezerwacji</h1>\r\n                    <div className=\"row row-cols-3 mb-2 mt-3 \" style={{paddingBottom:\"70px\"}}>\r\n                        <div className=\"card text-dark bg-info mb-3 mr-4\" style={{maxWidth: \"30%\", marginLeft:\"20px\"}}>\r\n                            <div className=\"card-header\">dane hotelu</div>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{selectedHotel.hotel.nazwa}</h5>\r\n                                <p className=\"card-text font-italic\">{selectedHotel.hotel.opis}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card text-dark bg-warning mb-3 mr-4\" style={{maxWidth: \"30%\"}}>\r\n                            <div className=\"card-header\">Wybrana opcja</div>\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">{selectedOption.option.rodzaj}</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{maxWidth: \"30%\"}}>\r\n                            <strong>Przetwarzanie...</strong>\r\n                            <div className=\"spinner-grow text-warning ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"col\">\r\n                            <NewUserReservation/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <ExistingUserReservation/>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReservationPage\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\NewUserReservation.jsx",["202","203"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport HotelFinder from '../apis/HotelFinder';\r\n\r\nconst NewUserReservation = () => {\r\n    const {idHotel, idOption} = useParams();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [startDate, setStartDate] = useState(\"2021-02-04\");\r\n    const [endDate, setEndDate] = useState(\"2021-02-04\");\r\n    const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await HotelFinder.post(`/${idHotel}/reservation/${idOption}/newUser`, {\r\n                name,\r\n                surname,\r\n                nickname,\r\n                password,\r\n                start_date : startDate,\r\n                end_date : endDate\r\n            });\r\n            setSelectedClient(response.data.data);\r\n            history.push(`/clients/${response.data.data.newClient.id_klient}/reservations`);\r\n        } catch (e) {\r\n            console.log(e);\r\n            if (e.response.data !== undefined) {\r\n                alert(e.response.data.data.err);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-2 text-left\">\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <h2>Nowy użytkownik</h2> <br/>\r\n                <div className=\"form-col\" style={{maxWidth:\"250px\"}}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Imię</label>\r\n                        <input value={name} onChange={e => setName(e.target.value)} id=\"name\" type=\"text\" className=\"form-control\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"surname\">Nazwisko</label>\r\n                        <input value={surname} onChange={e => setSurname(e.target.value)} id=\"surname\" className=\"form-control\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"nickname\">Pseudonim</label>\r\n                        <input value={nickname} onChange={e => setNickname(e.target.value)} id=\"nickname\" className=\"form-control\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Hasło</label>\r\n                        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} id=\"password\" className=\"form-control\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\" style={{marginRight:\"20px\"}}>\r\n                        <p>termin zameldowania</p>\r\n                        <input type=\"date\" id=\"start\" name=\"trip-start\"\r\n                            value={startDate} onChange={e => setStartDate(e.target.value)}\r\n                            min=\"2021-01-01\" max=\"2021-12-31\"></input>\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p>termin wymeldowania</p>\r\n                        <input type=\"date\" id=\"end\" name=\"trip-end\"\r\n                            value={endDate} onChange={e => setEndDate(e.target.value)}\r\n                            min=\"2021-01-01\" max=\"2021-12-31\"></input>\r\n                    </div>\r\n                </div>\r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary\">Dokonaj rezerwacji</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewUserReservation\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\components\\ExistingUserReservation.jsx",["204","205"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport HotelFinder from '../apis/HotelFinder';\r\n\r\nconst ExistingUserReservation = () => {\r\n    const {idHotel, idOption} = useParams();\r\n    const history = useHistory();\r\n\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [startDate, setStartDate] = useState(\"2021-02-04\");\r\n    const [endDate, setEndDate] = useState(\"2021-02-04\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\");\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await HotelFinder.post(`/${idHotel}/reservation/${idOption}/existingUser`, {\r\n                nickname,\r\n                password,\r\n                start_date : startDate,\r\n                end_date : endDate\r\n            });\r\n            if (response.status === 201) {\r\n                setSelectedClient(response.data.data.existingClientData);\r\n                history.push(`/clients/${response.data.data.existingClientData.id_klient}/reservations`);\r\n            } else {\r\n                alert(\"No such a user! Wrong login or password!\")\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            if (e.response.data !== undefined) {\r\n                alert(e.response.data.data.err);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-2 text-left\">\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <h2>Istniejący użytkownik</h2> <br/>\r\n                <div className=\"form-group\" style={{maxWidth:\"250px\"}}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"nickname\">Pseudonim</label>\r\n                        <input value={nickname} onChange={e => setNickname(e.target.value)} id=\"nickname\" className=\"form-control\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Hasło</label>\r\n                        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} id=\"password\" className=\"form-control\" required/>\r\n                    </div>\r\n                    <div className=\"form-group\" style={{marginRight:\"20px\"}}>\r\n                        <p>termin zameldowania</p>\r\n                        <input type=\"date\" id=\"start\" name=\"trip-start\"\r\n                            value={startDate} onChange={e => setStartDate(e.target.value)}\r\n                            min=\"2021-01-01\" max=\"2021-12-31\"></input>\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <p>termin wymeldowania</p>\r\n                        <input type=\"date\" id=\"end\" name=\"trip-end\"\r\n                            value={endDate} onChange={e => setEndDate(e.target.value)}\r\n                            min=\"2021-01-01\" max=\"2021-12-31\"></input>\r\n                    </div>\r\n                </div>\r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary\">Dokonaj rezerwacji</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExistingUserReservation\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\ClientsReservations.jsx",["206","207","208","209","210"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport HotelFinder from '../apis/HotelFinder';\r\nimport { HotelsContext } from '../context/HotelsContext';\r\n\r\n\r\nconst ClientsReservations = (props) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const {idClient} = useParams();\r\n    const {selectedClient, setSelectedClient} = useContext(HotelsContext);\r\n    const {selectedReservations, setSelectedReservations} = useContext(HotelsContext);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const client = await HotelFinder.get(`/clients/${idClient}`);\r\n                setSelectedClient(client.data.data);\r\n                const reservations = await HotelFinder.get(`/clients/${idClient}/reservations`);\r\n                setSelectedReservations(reservations.data.data.reservations);\r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const  handleDelete = async (e, id) => {\r\n        try {\r\n            const response = await HotelFinder.delete(`/reservations/${id}`);\r\n            setSelectedReservations(selectedReservations.filter(reservation => {\r\n                return reservation.id_rezerwacja !== id;\r\n            }));\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {selectedClient &&(\r\n                <>\r\n                    <h1 className=\"text-center display-2\" style={{paddingBottom:\"30px\"}}>Panel Użytkownika</h1>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <table className=\"table caption-top table-dark\">\r\n                                <caption>Dane użytkownika</caption>\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th scope=\"col\">Imię</th>\r\n                                    <td>{selectedClient.client.imie}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Nazwisko</th>\r\n                                        <td>{selectedClient.client.nazwisko}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Pseudonim</th>\r\n                                        <td>{selectedClient.client.pseudonim}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Hasło</th>\r\n                                        <td type=\"password\">{selectedClient.client.haslo}</td>\r\n                                    </tr>\r\n                                </thead>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <table className=\"table table-success table-hover\">\r\n                                    <thead >\r\n                                        <tr>\r\n                                        <th scope=\"col\">id</th>\r\n                                        <th scope=\"col\">hotel</th>\r\n                                        <th scope=\"col\">opcja</th>\r\n                                        <th scope=\"col\">zameldowanie</th>\r\n                                        <th scope=\"col\">wymeldowanie</th>\r\n                                        <th scope=\"col\">anuluj</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                {selectedReservations && selectedReservations.map((reservation) => {\r\n                                    return (\r\n                                        \r\n                                        <tr key={reservation.id_rezerwacja}>\r\n                                            <td>{reservation.id_rezerwacja}</td>\r\n                                            <td>{reservation.nazwa}</td>\r\n                                            <td>{reservation.rodzaj}</td>\r\n                                            <td>{reservation.zameldowanie}</td>\r\n                                            <td>{reservation.wymeldowanie}</td>\r\n                                            <td><button onClick={(e) => handleDelete(e, reservation.id_rezerwacja)} className=\"btn btn-secondary\">Anuluj</button></td>\r\n                                        </tr>\r\n                                        \r\n                                        \r\n                                    )\r\n                                })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientsReservations\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\biuro_podrozy\\client\\src\\routes\\CheckReservations.jsx",["211","212"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport HotelFinder from '../apis/HotelFinder';\r\n\r\nconst CheckReservations = () => {\r\n    const history = useHistory();\r\n\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await HotelFinder.get(`/clients/login/${nickname}/${password}`);\r\n            if (response.data.status === \"success\") {\r\n                history.push(`/clients/${response.data.data.client.id_klient}/reservations`);\r\n            } else {\r\n                alert(\"No such a user! Wrong login or password!\")\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            // alert(\"No such a user! Wrong login or password!\")\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sprawdzenie rezerwacji użytkownika</h1><br/>\r\n            <div style={{ width : \"30%\"}}>\r\n                <h2>Istniejący użytkownik</h2> <br/>\r\n                <form action=\"\" onSubmit={handleSubmit} >\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"nickname\">Pseudonim</label>\r\n                    <input value={nickname} onChange={e => setNickname(e.target.value)} size=\"50\" id=\"nickname\" className=\"form-control\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Hasło</label>\r\n                    <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} size=\"50\" id=\"password\" className=\"form-control\" required/>\r\n                </div>\r\n                \r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary\">zaloguj się</button>\r\n            </form>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckReservations\r\n",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":23,"column":8,"nodeType":"219","endLine":23,"endColumn":10,"suggestions":"220"},{"ruleId":"217","severity":1,"message":"221","line":20,"column":8,"nodeType":"219","endLine":20,"endColumn":10,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":25,"column":19,"nodeType":"225","messageId":"226","endLine":25,"endColumn":27},{"ruleId":"217","severity":1,"message":"227","line":20,"column":8,"nodeType":"219","endLine":20,"endColumn":10,"suggestions":"228"},{"ruleId":"223","severity":1,"message":"229","line":24,"column":15,"nodeType":"225","messageId":"226","endLine":24,"endColumn":32},{"ruleId":"223","severity":1,"message":"224","line":17,"column":19,"nodeType":"225","messageId":"226","endLine":17,"endColumn":27},{"ruleId":"213","replacedBy":"230"},{"ruleId":"215","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":16,"column":17,"nodeType":"234","endLine":16,"endColumn":34},{"ruleId":"223","severity":1,"message":"224","line":17,"column":19,"nodeType":"225","messageId":"226","endLine":17,"endColumn":27},{"ruleId":"223","severity":1,"message":"235","line":18,"column":23,"nodeType":"225","messageId":"226","endLine":18,"endColumn":41},{"ruleId":"217","severity":1,"message":"227","line":25,"column":8,"nodeType":"219","endLine":25,"endColumn":10,"suggestions":"236"},{"ruleId":"223","severity":1,"message":"237","line":29,"column":15,"nodeType":"225","messageId":"226","endLine":29,"endColumn":27},{"ruleId":"223","severity":1,"message":"238","line":33,"column":15,"nodeType":"225","messageId":"226","endLine":33,"endColumn":28},{"ruleId":"217","severity":1,"message":"239","line":20,"column":8,"nodeType":"219","endLine":20,"endColumn":10,"suggestions":"240"},{"ruleId":"223","severity":1,"message":"224","line":25,"column":19,"nodeType":"225","messageId":"226","endLine":25,"endColumn":27},{"ruleId":"217","severity":1,"message":"241","line":25,"column":8,"nodeType":"219","endLine":25,"endColumn":10,"suggestions":"242"},{"ruleId":"223","severity":1,"message":"243","line":8,"column":9,"nodeType":"225","messageId":"226","endLine":8,"endColumn":16},{"ruleId":"217","severity":1,"message":"244","line":18,"column":8,"nodeType":"219","endLine":18,"endColumn":10,"suggestions":"245"},{"ruleId":"223","severity":1,"message":"224","line":23,"column":19,"nodeType":"225","messageId":"226","endLine":23,"endColumn":27},{"ruleId":"223","severity":1,"message":"243","line":8,"column":9,"nodeType":"225","messageId":"226","endLine":8,"endColumn":16},{"ruleId":"217","severity":1,"message":"246","line":18,"column":8,"nodeType":"219","endLine":18,"endColumn":10,"suggestions":"247"},{"ruleId":"223","severity":1,"message":"224","line":23,"column":19,"nodeType":"225","messageId":"226","endLine":23,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":29,"column":30,"nodeType":"250","messageId":"251","endLine":29,"endColumn":32},{"ruleId":"223","severity":1,"message":"224","line":15,"column":19,"nodeType":"225","messageId":"226","endLine":15,"endColumn":27},{"ruleId":"217","severity":1,"message":"252","line":25,"column":8,"nodeType":"219","endLine":25,"endColumn":10,"suggestions":"253"},{"ruleId":"223","severity":1,"message":"254","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":27},{"ruleId":"223","severity":1,"message":"255","line":15,"column":12,"nodeType":"225","messageId":"226","endLine":15,"endColumn":26},{"ruleId":"223","severity":1,"message":"254","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":27},{"ruleId":"223","severity":1,"message":"255","line":13,"column":12,"nodeType":"225","messageId":"226","endLine":13,"endColumn":26},{"ruleId":"223","severity":1,"message":"256","line":1,"column":40,"nodeType":"225","messageId":"226","endLine":1,"endColumn":48},{"ruleId":"223","severity":1,"message":"243","line":8,"column":11,"nodeType":"225","messageId":"226","endLine":8,"endColumn":18},{"ruleId":"223","severity":1,"message":"257","line":9,"column":11,"nodeType":"225","messageId":"226","endLine":9,"endColumn":19},{"ruleId":"217","severity":1,"message":"258","line":27,"column":8,"nodeType":"219","endLine":27,"endColumn":10,"suggestions":"259"},{"ruleId":"223","severity":1,"message":"224","line":31,"column":19,"nodeType":"225","messageId":"226","endLine":31,"endColumn":27},{"ruleId":"223","severity":1,"message":"254","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":27},{"ruleId":"223","severity":1,"message":"260","line":2,"column":22,"nodeType":"225","messageId":"226","endLine":2,"endColumn":31},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelectedRestaurant'. Either include them or remove the dependency array.","ArrayExpression",["263"],"React Hook useEffect has a missing dependency: 'setRestaurants'. Either include it or remove the dependency array.",["264"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["265"],"'updatedRestaurant' is assigned a value but never used.",["261"],["262"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'updatedDescription' is assigned a value but never used.",["266"],"'updatedHotel' is assigned a value but never used.","'updatedHotel2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setHotels'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'id' and 'setSelectedHotel'. Either include them or remove the dependency array.",["268"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCities'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'setCountries'. Either include it or remove the dependency array.",["270"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'idHotel', 'idOption', 'setSelectedHotel', and 'setSelectedOption'. Either include them or remove the dependency array.",["271"],"'useContext' is defined but never used.","'selectedClient' is assigned a value but never used.","'useState' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'idClient', 'setSelectedClient', and 'setSelectedReservations'. Either include them or remove the dependency array.",["272"],"'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"277","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [id, setSelectedRestaurant]",{"range":"292","text":"293"},"Update the dependencies array to be: [setRestaurants]",{"range":"294","text":"295"},"Update the dependencies array to be: [id]",{"range":"296","text":"297"},{"range":"298","text":"297"},"Update the dependencies array to be: [setHotels]",{"range":"299","text":"300"},"Update the dependencies array to be: [id, setSelectedHotel]",{"range":"301","text":"302"},"Update the dependencies array to be: [setCities]",{"range":"303","text":"304"},"Update the dependencies array to be: [setCountries]",{"range":"305","text":"306"},"Update the dependencies array to be: [idHotel, idOption, setSelectedHotel, setSelectedOption]",{"range":"307","text":"308"},"Update the dependencies array to be: [idClient, setSelectedClient, setSelectedReservations]",{"range":"309","text":"310"},[874,876],"[id, setSelectedRestaurant]",[712,714],"[setRestaurants]",[785,787],"[id]",[1022,1024],[657,659],"[setHotels]",[935,937],"[id, setSelectedHotel]",[622,624],"[setCities]",[640,642],"[setCountries]",[1042,1044],"[idHotel, idOption, setSelectedHotel, setSelectedOption]",[1077,1079],"[idClient, setSelectedClient, setSelectedReservations]"]